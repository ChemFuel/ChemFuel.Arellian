<?xml version="1.0" encoding="utf-8" ?>
<Defs>
<!--================================ Call soldiers ================================-->

  <QuestScriptDef>
    <defName>CFAR_Permit_CallSoldiers</defName>
    <isRootSpecial>true</isRootSpecial>
    <autoAccept>true</autoAccept>
    <defaultHidden>true</defaultHidden>
    <questDescriptionAndNameRules>
      <rulesStrings>
        <li>questName->Soldiers</li>
        <li>questDescription-></li>
      </rulesStrings>
    </questDescriptionAndNameRules>
    <root Class="QuestNode_Sequence">
      <nodes>

        <!-- Generate soldiers -->
        <li Class="QuestNode_LoopCount">
          <loopCount>$soldiersCount</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <kindDef>$soldiersPawnKind</kindDef>
            <faction>$permitFaction</faction>
            <addToList>soldiers</addToList>
            <allowAddictions>false</allowAddictions>
            <biocodeWeaponChance>1</biocodeWeaponChance>
            <biocodeApparelChance>1</biocodeApparelChance>
            <allowPregnant>false</allowPregnant>
          </node>
        </li>
        <!-- Lock their apparel -->
        <li Class="QuestNode_SetAllApparelLocked">
          <pawns>$soldiers</pawns>
        </li>
        <!-- Disable all work except labor -->
        <li Class="QuestNode_WorkDisabled">
          <pawns>$soldiers</pawns>
          <disabledWorkTags>
            <li>Animals</li>
            <li>Cooking</li>
            <li>Crafting</li>
            <li>Artistic</li>
            <li>Social</li>
            <li>Intellectual</li>
          </disabledWorkTags>
        </li>
        <!-- Give on duty thought -->
        <li Class="QuestNode_AddMemoryThought">
          <pawns>$soldiers</pawns>
          <def>OnDuty</def>
        </li>
        
        <li Class="QuestNode_ExtraFaction">
          <faction>$permitFaction</faction>
          <pawns>$soldiers</pawns>
          <factionType>HomeFaction</factionType>
          <inSignalsRemovePawn>
            <li>lodgers.RanWild</li>
            <li>lodgers.BecameMutant</li>
          </inSignalsRemovePawn>
        </li>
        <li Class="QuestNode_JoinPlayer">
          <pawns>$soldiers</pawns>
          <joinPlayer>True</joinPlayer>
          <makePrisoners>False</makePrisoners>
        </li>
        <li Class="QuestNode_LeaveOnCleanup">
          <pawns>$soldiers</pawns>
          <sendStandardLetter>false</sendStandardLetter>
          <inSignalRemovePawn>soldiers.RanWild</inSignalRemovePawn>
        </li>

        <!-- Soldiers arrive by shuttle -->
        <li Class="QuestNode_SubScript">
          <def>Util_TransportShip_DropOff</def>
          <parms>
            <contents>$soldiers</contents>
            <owningFaction>$permitFaction</owningFaction>
          </parms>
        </li>
        <li Class="QuestNode_Letter">
          <label TKey="LetterLabelSoldiersArrived">Soldiers arrived</label>
          <text TKey="LetterTextSoldiersArrived">The soldiers from [permitFaction_name] have arrived. A shuttle will come to collect them in [soldiersDurationDays] days.</text>
          <lookTargets>$soldiers</lookTargets>
          <filterDeadPawnsFromLookTargets>True</filterDeadPawnsFromLookTargets>
        </li>
        <!-- Arrival shuttle is destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>dropoffShipThing.Destroyed</inSignal>
          <node Class="QuestNode_ChangeFactionGoodwill">
            <faction>$permitFaction</faction>
            <change>$goodwillPenaltyMajor</change>
            <reason>ShuttleDestroyed</reason>
          </node>
        </li>

        <!-- Departure shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>$($soldiersDurationDays * 60000)</delayTicks>
          <lodgers>$soldiers</lodgers>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_SubScript">
                <def>Util_TransportShip_Pickup</def>
                <parms>
                  <leaveDelayTicks>$(1*60000)</leaveDelayTicks>
                  <requiredPawns>$soldiers</requiredPawns>
				  <leaveImmediatelyWhenSatisfied>true</leaveImmediatelyWhenSatisfied>
                </parms>
              </li>
              <li Class="QuestNode_InspectString">
                <targets>$soldiers</targets>
                <inspectString TKey="InspectStringDepartShuttle">Should depart on shuttle</inspectString>
              </li>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleArrived">Shuttle arrived</label>
                <text TKey="LetterTextShuttleArrivedForSoldiers">A shuttle has arrived to collect the soldiers from [permitFaction_name].</text>
                <lookTargets>$pickupShipThing</lookTargets>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Goodwill penalty for soldier not on shuttle -->
        <li Class="QuestNode_Set">
          <name>goodwillPenaltyMinor</name>
          <value>-5</value>
        </li>
        <!-- Goodwill penalty for crimes against soldier -->
        <li Class="QuestNode_Set">
          <name>goodwillPenaltyMajor</name>
          <value>-25</value>
        </li>

        <!-- Missing soldiers on departure shuttle. Goodwill impact -->
        <li Class="QuestNode_ChangeGoodwillForAlivePawnsMissingFromShuttle">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <pawns>$soldiers</pawns>
          <faction>$permitFaction</faction>
          <goodwillChange>$goodwillPenaltyMajor</goodwillChange> <!-- Per missing soldier -->
          <reason>SoldiersMissedShuttle</reason>
        </li>

        <!-- - - - - - - -  -->
        <!--      End       -->
        <!-- - - - - - - -  -->

        <!-- Surgery Violation -->
        <li Class="QuestNode_Signal">
          <inSignal>soldiers.SurgeryViolation</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelUnauthorizedSurgery">Unauthorized surgery: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextUnauthorizedSurgery">Unauthorized, violating surgery has been performed on {SUBJECT_definite}, a soldier who was assigned to your command. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$soldiers</goodwillChangeFactionOf>
                <goodwillChangeReason>PerformedHarmfulSurgery</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger arrested -->
        <li Class="QuestNode_Signal">
          <inSignal>soldiers.Arrested</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelCaptured">POW: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextCaptured">{SUBJECT_definite}, a soldier who was assigned to your command has become a prisoner of war. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$soldiers</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnArrested</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger ran wild -->
        <li Class="QuestNode_Signal">
          <inSignal>soldiers.RanWild</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelLodgerRanWild">MIA: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextLodgerRanWild">{SUBJECT_definite}, a soldier who was assigned to your command has become missing in action. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMinor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMinor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$soldiers</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger left map -->
        <li Class="QuestNode_Signal">
          <inSignal>soldiers.LeftMap</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestLost">MIA: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestLost">{SUBJECT_definite}, a soldier who was assigned to your command has left the designated settlement and has been declared missing in action. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMinor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMinor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$soldiers</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Departure shuttle is destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_ChangeFactionGoodwill">
                <faction>$permitFaction</faction>
                <change>$goodwillPenaltyMajor</change>
                <reason>ShuttleDestroyed</reason>
              </li>
              <li Class="QuestNode_End" />
            </nodes>
          </node>
        </li>

        <!-- Shuttle sent -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <node Class="QuestNode_End" />
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentSatisfied</inSignal>
          <node Class="QuestNode_End" />
        </li>

        <!-- End if the permit's faction becomes hostile -->
        <li Class="QuestNode_Signal">
          <inSignal>permitFaction.BecameHostileToPlayer</inSignal>
          <node Class="QuestNode_End" />
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

<!--================================ Call specialists ================================-->

  <QuestScriptDef>
    <defName>CFAR_Permit_CallSpecialists</defName>
    <isRootSpecial>true</isRootSpecial>
    <autoAccept>true</autoAccept>
    <defaultHidden>true</defaultHidden>
    <questDescriptionAndNameRules>
      <rulesStrings>
        <li>questName->Specialists</li>
        <li>questDescription-></li>
      </rulesStrings>
    </questDescriptionAndNameRules>
    <root Class="QuestNode_Sequence">
      <nodes>

        <!-- Generate specialists -->
        <li Class="QuestNode_LoopCount">
          <loopCount>$specialistsCount</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <kindDef>$specialistsPawnKind</kindDef>
            <faction>$permitFaction</faction>
            <addToList>specialists</addToList>
            <allowAddictions>false</allowAddictions>
            <biocodeWeaponChance>1</biocodeWeaponChance>
            <biocodeApparelChance>1</biocodeApparelChance>
            <allowPregnant>false</allowPregnant>
          </node>
        </li>
        <!-- Lock their apparel -->
        <li Class="QuestNode_SetAllApparelLocked">
          <pawns>$specialists</pawns>
        </li>
        <!-- Disable all work except labor -->
        <li Class="QuestNode_WorkDisabled">
          <pawns>$specialists</pawns>
          <disabledWorkTags>
            <li>Animals</li>
            <li>Hunting</li>
            <li>Cooking</li>
            <li>Constructing</li>
            <li>PlantWork</li>
            <li>Mining</li>
            <li>Artistic</li>
          </disabledWorkTags>
        </li>
        <!-- Give on duty thought -->
        <li Class="QuestNode_AddMemoryThought">
          <pawns>$specialists</pawns>
          <def>OnDuty</def>
        </li>
        
        <li Class="QuestNode_ExtraFaction">
          <faction>$permitFaction</faction>
          <pawns>$specialists</pawns>
          <factionType>HomeFaction</factionType>
          <inSignalsRemovePawn>
            <li>lodgers.RanWild</li>
            <li>lodgers.BecameMutant</li>
          </inSignalsRemovePawn>
        </li>
        <li Class="QuestNode_JoinPlayer">
          <pawns>$specialists</pawns>
          <joinPlayer>True</joinPlayer>
          <makePrisoners>False</makePrisoners>
        </li>
        <li Class="QuestNode_LeaveOnCleanup">
          <pawns>$specialists</pawns>
          <sendStandardLetter>false</sendStandardLetter>
          <inSignalRemovePawn>specialists.RanWild</inSignalRemovePawn>
        </li>

        <!-- Specialists arrive by shuttle -->
        <li Class="QuestNode_SubScript">
          <def>Util_TransportShip_DropOff</def>
          <parms>
            <contents>$specialists</contents>
            <owningFaction>$permitFaction</owningFaction>
          </parms>
        </li>
        <li Class="QuestNode_Letter">
          <label TKey="LetterLabelSpecialistsArrived">Specialists arrived</label>
          <text TKey="LetterTextSpecialistsArrived">The specialists from [permitFaction_name] have arrived. A shuttle will come to collect them in [specialistsDurationDays] days.</text>
          <lookTargets>$specialists</lookTargets>
          <filterDeadPawnsFromLookTargets>True</filterDeadPawnsFromLookTargets>
        </li>
        <!-- Arrival shuttle is destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>dropoffShipThing.Destroyed</inSignal>
          <node Class="QuestNode_ChangeFactionGoodwill">
            <faction>$permitFaction</faction>
            <change>$goodwillPenaltyMajor</change>
            <reason>ShuttleDestroyed</reason>
          </node>
        </li>

        <!-- Departure shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>$($specialistsDurationDays * 60000)</delayTicks>
          <lodgers>$specialists</lodgers>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_SubScript">
                <def>Util_TransportShip_Pickup</def>
                <parms>
                  <leaveDelayTicks>$(1*60000)</leaveDelayTicks>
                  <requiredPawns>$specialists</requiredPawns>
				  <leaveImmediatelyWhenSatisfied>true</leaveImmediatelyWhenSatisfied>
                </parms>
              </li>
              <li Class="QuestNode_InspectString">
                <targets>$specialists</targets>
                <inspectString TKey="InspectStringDepartShuttle">Should depart on shuttle</inspectString>
              </li>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleArrived">Shuttle arrived</label>
                <text TKey="LetterTextShuttleArrivedForSpecialists">A shuttle has arrived to collect the specialists from [permitFaction_name].</text>
                <lookTargets>$pickupShipThing</lookTargets>
              </li>
            </nodes>
          </node>
        </li>
        <!-- Goodwill penalty for any accidents regarding specialists or shuttle -->
        <li Class="QuestNode_Set">
          <name>goodwillPenaltyMajor</name>
          <value>-25</value>
        </li>

        <!-- Missing specialists on departure shuttle. Goodwill impact -->
        <li Class="QuestNode_ChangeGoodwillForAlivePawnsMissingFromShuttle">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <pawns>$specialists</pawns>
          <faction>$permitFaction</faction>
          <goodwillChange>$goodwillPenaltyMajor</goodwillChange> <!-- Per missing specialist -->
          <reason>SpecialistsMissedShuttle</reason>
        </li>

        <!-- - - - - - - -  -->
        <!--      End       -->
        <!-- - - - - - - -  -->

        <!-- Specialist killed -->
        <li Class="QuestNode_Signal">
          <inSignal>specialists.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelSoldierDied">KIA: {SUBJECT_definite}</label>
                <text TKey="LetterTextSoldierDied">{SUBJECT_definite}, a specialist sent to you by [permitFaction_name] has been killed in action. Your goodwill with [permitFaction_name] has fallen by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$specialists</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Surgery Violation -->
        <li Class="QuestNode_Signal">
          <inSignal>specialists.SurgeryViolation</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelUnauthorizedSurgery">Unauthorized surgery: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextUnauthorizedSurgery">Unauthorized, violating surgery has been performed on {SUBJECT_definite}, a specialist who was assigned to your command. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$specialists</goodwillChangeFactionOf>
                <goodwillChangeReason>PerformedHarmfulSurgery</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger arrested -->
        <li Class="QuestNode_Signal">
          <inSignal>specialists.Arrested</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelCaptured">POW: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextCaptured">{SUBJECT_definite}, a specialist who was assigned to your command has become a prisoner of war. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$specialists</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnArrested</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger ran wild -->
        <li Class="QuestNode_Signal">
          <inSignal>specialists.RanWild</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelLodgerRanWild">MIA: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextLodgerRanWild">{SUBJECT_definite}, a specialist who was assigned to your command has become missing in action. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$specialists</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger left map -->
        <li Class="QuestNode_Signal">
          <inSignal>specialists.LeftMap</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestLost">MIA: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestLost">{SUBJECT_definite}, a specialist who was assigned to your command has left the designated settlement and has been declared missing in action. Your relations with [permitFaction_name] have decreased by [goodwillPenaltyMajor].</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>$goodwillPenaltyMajor</goodwillChangeAmount>
                <goodwillChangeFactionOf>$specialists</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Departure shuttle is destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_ChangeFactionGoodwill">
                <faction>$permitFaction</faction>
                <change>$goodwillPenaltyMajor</change>
                <reason>ShuttleDestroyed</reason>
              </li>
              <li Class="QuestNode_End" />
            </nodes>
          </node>
        </li>

        <!-- Shuttle sent -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <node Class="QuestNode_End" />
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentSatisfied</inSignal>
          <node Class="QuestNode_End" />
        </li>

        <!-- End if the permit's faction becomes hostile -->
        <li Class="QuestNode_Signal">
          <inSignal>permitFaction.BecameHostileToPlayer</inSignal>
          <node Class="QuestNode_End" />
        </li>

      </nodes>
    </root>
  </QuestScriptDef>

<!--================================ Transfer soldiers ================================-->

  <QuestScriptDef>
    <defName>CFAR_Permit_TransferSoldiers</defName>
    <isRootSpecial>true</isRootSpecial>
    <autoAccept>true</autoAccept>
    <defaultHidden>true</defaultHidden>
    <questDescriptionAndNameRules>
      <rulesStrings>
        <li>questName->Soldiers</li>
        <li>questDescription-></li>
      </rulesStrings>
    </questDescriptionAndNameRules>
    <root Class="QuestNode_Sequence">
      <nodes>

        <!-- Generate soldiers -->
        <li Class="QuestNode_LoopCount">
          <loopCount>$soldiersCount</loopCount>
          <node Class="QuestNode_GeneratePawn">
            <kindDef>$soldiersPawnKind</kindDef>
            <faction>$permitFaction</faction>
            <addToList>soldiers</addToList>
            <allowAddictions>false</allowAddictions>
            <allowPregnant>false</allowPregnant>
          </node>
        </li>

        <li Class="QuestNode_JoinPlayer">
          <pawns>$soldiers</pawns>
          <joinPlayer>True</joinPlayer>
          <makePrisoners>False</makePrisoners>
        </li>

        <!-- Soldiers arrive by shuttle -->
        <li Class="QuestNode_SubScript">
          <def>Util_TransportShip_DropOff</def>
          <parms>
            <contents>$soldiers</contents>
            <owningFaction>$permitFaction</owningFaction>
          </parms>
        </li>
        <li Class="QuestNode_Letter">
          <label TKey="LetterLabelSoldiersArrived">Soldiers arrived</label>
          <text TKey="LetterTextSoldiersArrived">The soldiers from [permitFaction_name] have arrived.</text>
          <lookTargets>$soldiers</lookTargets>
          <filterDeadPawnsFromLookTargets>True</filterDeadPawnsFromLookTargets>
        </li>
        <!-- Arrival shuttle is destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>dropoffShipThing.Destroyed</inSignal>
          <node Class="QuestNode_ChangeFactionGoodwill">
            <faction>$permitFaction</faction>
            <change>$goodwillPenaltyMajor</change>
            <reason>ShuttleDestroyed</reason>
          </node>
        </li>

        <!-- Goodwill penalty for shuttle destruction -->
        <li Class="QuestNode_Set">
          <name>goodwillPenaltyMajor</name>
          <value>-25</value>
        </li>

        <li Class="QuestNode_NoWorldObject">
          <worldObject>$site</worldObject>
          <node Class="QuestNode_End" />
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
</Defs>